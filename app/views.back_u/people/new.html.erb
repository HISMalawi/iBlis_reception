<style>
  .tt_controls_cell_phone_number #qwerty { display:none; }
  .tt_controls_ground_phone_number #qwerty { display:none; }
  .tt_controls_office_phone_number #qwerty { display:none; }
  .tt_controls_cell_phone_number #num , #plus, #apostrophe, #star, #char, #abc, #date, #slash, #minus, #comma, #percent, #decimal { display:none; }

  .tt_controls_year_of_birth #Unknown { display:block; }
  .tt_controls_age_estimate #Unknown { display:none; }

  .tt_controls_month_of_birth .keyboard{display:none;}
  #tt_page_month_of_birth .options{height:570px;}
  #tt_page_month_of_birth .options li{font-size:30px;}


</style>



<script>
  var tt_cancel_destination = "/";
  var dob_year, dob_day, dob_month;

  var skipped = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

  function seen(page) {
    return;
    for (var i = page; i >= 0; i--) {
      skipped[i] = 1;
    }
  }

  function setDOB() {
    try {
      dob_year = document.getElementById('tt_page_year_of_birth').getElementsByTagName("input")[0].value
    }catch(e){ dob_year = dob_year }
    try {
      dob_month = document.getElementById('tt_page_month_of_birth').getElementsByTagName("input")[0].getAttribute('tstvalue')
      if (dob_month.length == 1)
        dob_month = 0 + dob_month
    }catch(e){ dob_month = dob_month }
    try {
      dob_day = document.getElementById('tt_page_birth_day').getElementsByTagName("input")[0].value
      if (dob_day.length == 1)
        dob_day = 0 + dob_day
    }catch(e){ dob_day = dob_day }

    set_dob = (dob_year + '-' + dob_month + '-' + dob_day)
    return true
  }




  function validateDOB() {
    setDOB();
    curr_date = new Date();

    if (dateCreate(set_dob) == 'Invalid Date') {
      if (set_dob.split('-')[1] == 'Unknown')
        return true

      if (curr_date.getFullYear() == parseInt(dob_year)) {
        if ((curr_date.getMonth() + 1) < parseInt(dob_month)){
          if (document.getElementById('tt_page_month_of_birth') != null)
            return true

          return false
        }
      }

      if (dob_month == 'Unknown'){
        if (curr_date.getFullYear() == parseInt(dob_year)) {
          if ((curr_date.getMonth() + 1) < parseInt(dob_month))
            return false
        }
      }
    }else{
      if (document.getElementById('tt_page_month_of_birth') != null)
        return true

      if (curr_date < dateCreate(set_dob)) 
        return false
    }
    return true
  }

  function dateCreate(date_str){
    intyear = 0 ; intmonth = 0 ; intday = 0;
    intyear = parseInt(date_str.substring(0,4))
    intmonth = (parseInt(date_str.substring(5,7)) - 1)
    intday = (parseInt(date_str.substring(8,10)))

    if (intmonth == -1)
      intmonth = (parseInt(date_str.substring(5,7).substring(1,2)) - 1)

    if (intday == 0)
      intday = parseInt(date_str.substring(8,10).substring(1,2))

    return new Date(intyear,intmonth,intday);
  }

  function preselectGender(){

      <% if !params[:gender].blank? %>
        document.getElementById("gender").value = "";
      <% end %>
  }

   function validateDay(){
       if (__$("tt_page_birth_day") == __$("page" + tstCurrentPage).parentNode){
           if(validateDOB()){
                __$('nextButton').onmousedown = function(){
                    gotoNextPage();
                }
           }else{
               __$('nextButton').onmousedown = function(){
                   showMessage("Date of birth cannot be in the future!");
               }
           }
       }else{
           __$('nextButton').onmousedown = function(){
               gotoNextPage();
           }
       }
   }

   window.setInterval('setDOB(); validateDay()', 250);

</script>


<%= form_tag("/people/create", id: "create-form", method: 'post', enctype: 'multipart/form-data') do %>
 <% if !params[:identifier].blank? %>
         <%= hidden_field 'identifier', params[:identifier]%>
 <% end %>

    <%= hidden_field_tag "person[names][given_name]", params[:given_name], :id => 'given_name' %>
    <%= hidden_field_tag "person[names][family_name]", params[:family_name], :id => 'family_name' %>

    <% gender = params[:gender] == '0' ? 'Male' : 'Female' %>
    <%= hidden_field_tag "gender", gender,  :id => 'gender' %>

  <%= text_field_tag "person[birth_year]", nil, {:helpText => 'Year of Birth', 
      :field_type => 'number', 
      :absoluteMin => "1890", 
      :min => "1940", 
      :absoluteMax => Date.today.year, 
      :tt_pageStyleClass => "Numeric NumbersOnly", 
      :tt_onLoad => 'seen(tstCurrentPage);',
      :validationJS => "setDOB();" }  %>

  <%= select_tag "person[birth_month]", month_name_options, {:helpText => 'Month of Birth', 
      :condition => '$("person_birth_year").value.toLowerCase() != "unknown"',
      :validationJS => "validateDOB();",
      :validationMessage => 'Please enter a valid date', 
      :tt_onLoad => "__$('keyboard').style.display = 'none'"}%>

  <%= text_field_tag "person[age_estimate]", nil, {:helpText => 'Age Estimate', 
      :absoluteMin => 1, :absoluteMax => age_limit, 
      :field_type => 'number', :condition => '$("person_birth_year").value == "Unknown"', 
      :tt_onLoad => "$('nextButton').style.display = 'block';", 
      :tt_pageStyleClass => "Numeric NumbersOnly"} %> 

  <%= text_field_tag "person[birth_day]",  nil, :field_type => 'number',
      :helpText => 'Birth Day',
      :condition => '($("person_birth_year").value != "Unknown") && ($("person_birth_month").value != "Unknown")', 
      :tt_onLoad => "getDayOfMonthPicker($('person_birth_year').value, $('person_birth_month').value);$('nextButton').style.display = 'block';" ,
      :validationJS => "validateDOB()",
      :validationMessage => 'Please enter a valid date'%>

  <%= text_field_tag "person[addresses][physical_address]", params[:city_village],
    {
    :field_type => 'alpha',
    :helpText => "Physical Address",
    :tt_requireNextClick => true,
    :tt_pageStyleClass => "azButton",
    :ajaxURL => '/people/addresses?search_string=', 
    :allowFreeText => true ,
    :tt_onLoad => ""}%>

    <%
       identifier = ""
       if !params[:identifier].blank? and (params[:identifier].length == 6 or params[:identifier].length == 13)
        identifier = params[:identifier]
       end
    %>
    <%= text_field_tag "person[npid]", identifier,
                       {
                               :field_type => 'alpha',
                               :optional => true,
                               :helpText => "External Patient Number (Optional)",
                               :tt_requireNextClick => true,
                               :tt_pageStyleClass => "azButton",
                               :allowFreeText => true ,
                               :tt_onLoad => ""}%>

<% end %>
